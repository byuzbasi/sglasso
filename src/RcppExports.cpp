// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// std_c
List std_c(const arma::mat& x);
RcppExport SEXP _sglasso_std_c(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(std_c(x));
    return rcpp_result_gen;
END_RCPP
}
// lambda_max_c
double lambda_max_c(const arma::mat& Xtilde, const arma::colvec& Ytilde, const arma::colvec& K, const arma::colvec& K1);
RcppExport SEXP _sglasso_lambda_max_c(SEXP XtildeSEXP, SEXP YtildeSEXP, SEXP KSEXP, SEXP K1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtilde(XtildeSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type Ytilde(YtildeSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type K1(K1SEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_max_c(Xtilde, Ytilde, K, K1));
    return rcpp_result_gen;
END_RCPP
}
// gd_sglasso_ssr
List gd_sglasso_ssr(const arma::mat& Xtilde, const arma::colvec& Ytilde, const arma::colvec lambda, const double lambda_max, const arma::colvec d, const double alpha, const arma::colvec& K, const arma::colvec& K1, const arma::uword& K0, const arma::colvec& gm, const arma::colvec& beta_start, const double max_iter, const double eps, const arma::uword& dfmax, const arma::uword& gmax);
RcppExport SEXP _sglasso_gd_sglasso_ssr(SEXP XtildeSEXP, SEXP YtildeSEXP, SEXP lambdaSEXP, SEXP lambda_maxSEXP, SEXP dSEXP, SEXP alphaSEXP, SEXP KSEXP, SEXP K1SEXP, SEXP K0SEXP, SEXP gmSEXP, SEXP beta_startSEXP, SEXP max_iterSEXP, SEXP epsSEXP, SEXP dfmaxSEXP, SEXP gmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtilde(XtildeSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type Ytilde(YtildeSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda_max(lambda_maxSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type K1(K1SEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type K0(K0SEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type gm(gmSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< const double >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type gmax(gmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(gd_sglasso_ssr(Xtilde, Ytilde, lambda, lambda_max, d, alpha, K, K1, K0, gm, beta_start, max_iter, eps, dfmax, gmax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sglasso_std_c", (DL_FUNC) &_sglasso_std_c, 1},
    {"_sglasso_lambda_max_c", (DL_FUNC) &_sglasso_lambda_max_c, 4},
    {"_sglasso_gd_sglasso_ssr", (DL_FUNC) &_sglasso_gd_sglasso_ssr, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_sglasso(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
